name: Zeva2 Dev CI

on:
  push:
    branches:
      - develop
      - feature/pipeline-setup
  workflow_dispatch:

env:
  TOOLS_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-tools
  DEV_NAMESPACE: ${{ secrets.OPENSHIFT_NAMESPACE_PLATE }}-dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-oc:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Set up cache for OpenShift CLI
        id: cache
        uses: actions/cache@v4.2.0
        with:
          path: /usr/local/bin/oc # Path where the `oc` binary will be installed
          key: oc-cli-${{ runner.os }}

      - name: Install OpenShift CLI (if not cached)
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz
          tar -xvf openshift-client-linux.tar.gz
          sudo mv oc /usr/local/bin/
          oc version --client

      - name: Confirm OpenShift CLI is Available
        run: oc version --client

  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: "6.0.x"

      - name: Determine Version
        id: version_step # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.1.11
        with:
          useConfigFile: true

      - name: Export Version
        id: export_version
        run: echo "VERSION=${{ steps.version_step.outputs.SemVer }}" >> $GITHUB_ENV

  build-next:
    name: Build Zeva Next
    runs-on: ubuntu-latest
    needs: [install-oc, versioning]
    timeout-minutes: 60

    env:
      VERSION: ${{ needs.versioning.outputs.VERSION }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4.1.1

      - name: Restore oc command from Cache
        uses: actions/cache@v4.2.0
        with:
          path: /usr/local/bin/oc
          key: oc-cli-${{ runner.os }}

      - name: Log in to Openshift
        uses: redhat-actions/oc-login@v1.3
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.TOOLS_NAMESPACE }}

      - name: Build Next
        run: |
          echo "VERSION=${{ env.VERSION }}"
          oc projects
          cd openshift/templates
          oc process -f ./next-bc.yaml VERSION=${{ env.VERSION }} GIT_REF=feature/pipeline-setup | oc apply --wait=true -f - -n ${{ env.TOOLS_NAMESPACE }}
          oc -n ${{ env.TOOLS_NAMESPACE }} start-build next-${{ env.VERSION }} --wait=true
          # oc tag ${{ env.TOOLS_NAMESPACE }}/zeva-next:${{ env.VERSION }} ${{ env.DEV_NAMESPACE }}/zeva-next:${{ env.VERSION }}
